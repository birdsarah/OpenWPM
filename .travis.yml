sudo: required
language: python
os: linux
dist: xenial
python:
  # We don't actually use the Travis Python, but this keeps it organized.
  - "2.7"
  - "3.5"
  - "3.6"
  - "3.7"

env:
# See, https://docs.travis-ci.com/user/speeding-up-the-build/
# We need a balanced distribution of the tests
# Once we add and remove tests, this distribution may become unbalanced.
# Feel free to move tests around to make the running time of the jobs
# as close as possible.
  - TESTS=test_[a-b,d-e]*
# test_crawl.py is the longest running test.
  - TESTS=test_c*
  - TESTS=test_[f-h]*
  - TESTS=test_[i-z]*

git:
  depth: 3

before_install:
  - "export DISPLAY=:99.0"
  - "export BOTO_CONFIG=/dev/null" # https://github.com/travis-ci/travis-ci/issues/7940

install:
  - sudo apt-get update

  # Install conda
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a

  # Edit the environment.yml file for the target Python version
  - echo $TRAVIS_PYTHON_VERSION
  - sed -i -E 's/(python=)(.*)/\1'$TRAVIS_PYTHON_VERSION'/' ./environment.yaml

  # Setup our conda environment and dev requirements
  - conda env create -f environment.yaml
  - source activate openwpm
  - pip install -r requirements-dev.txt

  # Setup npm dependencies
  # THIS HAS TEMPORARILY REMOVED THE TESTING OF DIFFERENT NODE VERSIONS THESE CAN BE ADDED BACK WITH TEST MATRIX
  - pushd automation/Extension/webext-instrumentation && npm install && popd
  - pushd automation/Extension/firefox && npm install && popd

script:
  - pushd test && py.test -s -v --durations=10 $TESTS && popd
  - pushd automation/Extension/webext-instrumentation && npm test && popd

after_success:
  - flake8
  - pushd automation/Extension/webext-instrumentation
  - # npx nyc report --reporter=lcov | npx codecov
  - npm run cov:check

jobs:
  include:
    - language:
      python:
      env:
        - TESTS="Docker"
      services:
        - docker
      before_install:
      before_script:
      install:
      script:
        - docker build -f Dockerfile -t openwpm .
        - ./.deploy-to-dockerhub.sh
